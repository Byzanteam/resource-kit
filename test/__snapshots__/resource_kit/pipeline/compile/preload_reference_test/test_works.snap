{%{
   __struct__: ResourceKit.Schema.Action.Insert,
   changeset: %{
     __struct__: ResourceKit.Schema.Changeset,
     changes: [
       %{
         name: "title",
         value: %{
           value: %{
             path: ["title"],
             __struct__: ResourceKit.JSONPointer.Absolute
           },
           __struct__: ResourceKit.Schema.Pointer.Data
         },
         __struct__: ResourceKit.Schema.Change.Column,
         schema: nil
       },
       %{
         name: "poster",
         value: %{
           value: %{
             path: ["poster"],
             __struct__: ResourceKit.JSONPointer.Absolute
           },
           __struct__: ResourceKit.Schema.Pointer.Data
         },
         __struct__: ResourceKit.Schema.Change.Association,
         changeset: %{
           __struct__: ResourceKit.Schema.Changeset,
           changes: [
             %{
               name: "url",
               value: %{
                 value: %{
                   path: ["url"],
                   origin: {0, 0},
                   __struct__: ResourceKit.JSONPointer.Relative,
                   sharp: false
                 },
                 __struct__: ResourceKit.Schema.Pointer.Data
               },
               __struct__: ResourceKit.Schema.Change.Column,
               schema: nil
             }
           ],
           validator: nil
         },
         schema: nil,
         on_replace: :update
       },
       %{
         name: "comments",
         value: %{
           value: %{
             path: ["comments"],
             __struct__: ResourceKit.JSONPointer.Absolute
           },
           __struct__: ResourceKit.Schema.Pointer.Data
         },
         __struct__: ResourceKit.Schema.Change.Association,
         changeset: %{
           __struct__: ResourceKit.Schema.Changeset,
           changes: [
             %{
               name: "content",
               value: %{
                 value: %{
                   path: ["content"],
                   origin: {0, 0},
                   __struct__: ResourceKit.JSONPointer.Relative,
                   sharp: false
                 },
                 __struct__: ResourceKit.Schema.Pointer.Data
               },
               __struct__: ResourceKit.Schema.Change.Column,
               schema: nil
             },
             %{
               name: "attachments",
               value: %{
                 value: %{
                   path: ["attachments"],
                   origin: {0, 0},
                   __struct__: ResourceKit.JSONPointer.Relative,
                   sharp: false
                 },
                 __struct__: ResourceKit.Schema.Pointer.Data
               },
               __struct__: ResourceKit.Schema.Change.Association,
               changeset: %{
                 __struct__: ResourceKit.Schema.Changeset,
                 changes: [
                   %{
                     name: "url",
                     value: %{
                       value: %{
                         path: ["url"],
                         origin: {0, 0},
                         __struct__: ResourceKit.JSONPointer.Relative,
                         sharp: false
                       },
                       __struct__: ResourceKit.Schema.Pointer.Data
                     },
                     __struct__: ResourceKit.Schema.Change.Column,
                     schema: nil
                   }
                 ],
                 validator: nil
               },
               schema: nil,
               on_replace: :update
             }
           ],
           validator: nil
         },
         schema: nil,
         on_replace: :delete
       }
     ],
     validator: nil
   },
   schema: %{
     columns: [
       %{
         name: "id",
         type: :uuid,
         __struct__: ResourceKit.Schema.Column.Literal,
         primary_key: true,
         auto_generate: true
       },
       %{
         name: "title",
         type: :text,
         __struct__: ResourceKit.Schema.Column.Literal,
         primary_key: false,
         auto_generate: false
       },
       %{
         name: "poster",
         type: :has_one,
         __struct__: ResourceKit.Schema.Column.Has,
         foreign_key: "movie_id",
         association_schema: %{
           uri: %{
             port: nil,
             scheme: nil,
             path: "/schemas/posters.json",
             host: nil,
             __struct__: URI,
             userinfo: nil,
             fragment: nil,
             query: nil,
             authority: nil
           },
           __struct__: ResourceKit.Schema.Ref,
           "$ref": %{
             port: nil,
             scheme: nil,
             path: "/schemas/posters.json",
             host: nil,
             __struct__: URI,
             userinfo: nil,
             fragment: nil,
             query: nil,
             authority: nil
           }
         }
       },
       %{
         name: "comments",
         type: :has_many,
         __struct__: ResourceKit.Schema.Column.Has,
         foreign_key: "movie_id",
         association_schema: %{
           uri: %{
             port: nil,
             scheme: nil,
             path: "/schemas/comments.json",
             host: nil,
             __struct__: URI,
             userinfo: nil,
             fragment: nil,
             query: nil,
             authority: nil
           },
           __struct__: ResourceKit.Schema.Ref,
           "$ref": %{
             port: nil,
             scheme: nil,
             path: "/schemas/comments.json",
             host: nil,
             __struct__: URI,
             userinfo: nil,
             fragment: nil,
             query: nil,
             authority: nil
           }
         }
       }
     ],
     source: "movies",
     __struct__: ResourceKit.Schema.Schema
   },
   params_schema: %{
     "properties" => %{
       "comments" => %{
         "items" => %{
           "properties" => %{
             "attachments" => %{
               "items" => %{
                 "properties" => %{"url" => %{"type" => "string"}},
                 "required" => ["url"],
                 "type" => "object"
               },
               "type" => "array"
             },
             "content" => %{"type" => "string"}
           },
           "required" => ["content"],
           "type" => "object"
         },
         "type" => "array"
       },
       "created_at" => %{"format" => "date-time", "type" => "string"},
       "likes" => %{"type" => "integer"},
       "poster" => %{
         "properties" => %{"url" => %{"type" => "string"}},
         "required" => ["url"],
         "type" => "object"
       },
       "release_date" => %{"type" => "string"},
       "tags" => %{"items" => %{"type" => "string"}, "type" => "array"},
       "title" => %{"type" => "string"}
     },
     "required" => ["title", "likes", "release_date", "created_at", "tags"],
     "type" => "object"
   },
   returning_schema: [
     %{
       name: "context",
       value: %{
         value: %{path: ["ip"], __struct__: ResourceKit.JSONPointer.Absolute},
         __struct__: ResourceKit.Schema.Pointer.Context
       },
       __struct__: ResourceKit.Schema.Returning.Column
     },
     %{
       name: "data",
       value: %{
         value: %{path: ["foo"], __struct__: ResourceKit.JSONPointer.Absolute},
         __struct__: ResourceKit.Schema.Pointer.Data
       },
       __struct__: ResourceKit.Schema.Returning.Column
     },
     %{
       name: "title",
       value: %{
         value: %{path: ["title"], __struct__: ResourceKit.JSONPointer.Absolute},
         __struct__: ResourceKit.Schema.Pointer.Schema
       },
       __struct__: ResourceKit.Schema.Returning.Column
     },
     %{
       name: "likes",
       value: %{
         value: %{path: ["likes"], __struct__: ResourceKit.JSONPointer.Absolute},
         __struct__: ResourceKit.Schema.Pointer.Schema
       },
       __struct__: ResourceKit.Schema.Returning.Column
     },
     %{
       name: "released",
       value: %{
         value: %{
           path: ["released"],
           __struct__: ResourceKit.JSONPointer.Absolute
         },
         __struct__: ResourceKit.Schema.Pointer.Schema
       },
       __struct__: ResourceKit.Schema.Returning.Column
     },
     %{
       name: "release_date",
       value: %{
         value: %{
           path: ["release_date"],
           __struct__: ResourceKit.JSONPointer.Absolute
         },
         __struct__: ResourceKit.Schema.Pointer.Schema
       },
       __struct__: ResourceKit.Schema.Returning.Column
     },
     %{
       name: "created_at",
       value: %{
         value: %{
           path: ["created_at"],
           __struct__: ResourceKit.JSONPointer.Absolute
         },
         __struct__: ResourceKit.Schema.Pointer.Schema
       },
       __struct__: ResourceKit.Schema.Returning.Column
     },
     %{
       name: "tags",
       value: %{
         value: %{path: ["tags"], __struct__: ResourceKit.JSONPointer.Absolute},
         __struct__: ResourceKit.Schema.Pointer.Schema
       },
       __struct__: ResourceKit.Schema.Returning.Column
     },
     %{
       name: "poster",
       value: %{
         value: %{
           path: ["poster"],
           __struct__: ResourceKit.JSONPointer.Absolute
         },
         __struct__: ResourceKit.Schema.Pointer.Schema
       },
       __struct__: ResourceKit.Schema.Returning.Association,
       schema: [
         %{
           name: "url",
           value: %{
             value: %{
               path: ["url"],
               origin: {0, 0},
               __struct__: ResourceKit.JSONPointer.Relative,
               sharp: false
             },
             __struct__: ResourceKit.Schema.Pointer.Schema
           },
           __struct__: ResourceKit.Schema.Returning.Column
         }
       ]
     },
     %{
       name: "comments",
       value: %{
         value: %{
           path: ["comments"],
           __struct__: ResourceKit.JSONPointer.Absolute
         },
         __struct__: ResourceKit.Schema.Pointer.Schema
       },
       __struct__: ResourceKit.Schema.Returning.Association,
       schema: [
         %{
           name: "content",
           value: %{
             value: %{
               path: ["content"],
               origin: {0, 0},
               __struct__: ResourceKit.JSONPointer.Relative,
               sharp: false
             },
             __struct__: ResourceKit.Schema.Pointer.Schema
           },
           __struct__: ResourceKit.Schema.Returning.Column
         },
         %{
           name: "attachments",
           value: %{
             value: %{
               path: ["attachments"],
               origin: {0, 0},
               __struct__: ResourceKit.JSONPointer.Relative,
               sharp: false
             },
             __struct__: ResourceKit.Schema.Pointer.Schema
           },
           __struct__: ResourceKit.Schema.Returning.Association,
           schema: [
             %{
               name: "url",
               value: %{
                 value: %{
                   path: ["url"],
                   origin: {0, 0},
                   __struct__: ResourceKit.JSONPointer.Relative,
                   sharp: false
                 },
                 __struct__: ResourceKit.Schema.Pointer.Schema
               },
               __struct__: ResourceKit.Schema.Returning.Column
             }
           ]
         }
       ]
     }
   ]
 },
 %{
   %{
     uri: %{
       port: nil,
       scheme: nil,
       path: "/schemas/attachments.json",
       host: nil,
       __struct__: URI,
       userinfo: nil,
       fragment: nil,
       query: nil,
       authority: nil
     },
     __struct__: ResourceKit.Schema.Ref,
     "$ref": %{
       port: nil,
       scheme: nil,
       path: "/schemas/attachments.json",
       host: nil,
       __struct__: URI,
       userinfo: nil,
       fragment: nil,
       query: nil,
       authority: nil
     }
   } => %{
     columns: [
       %{
         name: "id",
         type: :uuid,
         __struct__: ResourceKit.Schema.Column.Literal,
         primary_key: true,
         auto_generate: true
       },
       %{
         name: "comment_id",
         type: :uuid,
         __struct__: ResourceKit.Schema.Column.Literal,
         primary_key: false,
         auto_generate: false
       },
       %{
         name: "url",
         type: :text,
         __struct__: ResourceKit.Schema.Column.Literal,
         primary_key: false,
         auto_generate: false
       }
     ],
     source: "attachments",
     __struct__: ResourceKit.Schema.Schema
   },
   %{
     uri: %{
       port: nil,
       scheme: nil,
       path: "/schemas/comments.json",
       host: nil,
       __struct__: URI,
       userinfo: nil,
       fragment: nil,
       query: nil,
       authority: nil
     },
     __struct__: ResourceKit.Schema.Ref,
     "$ref": %{
       port: nil,
       scheme: nil,
       path: "/schemas/comments.json",
       host: nil,
       __struct__: URI,
       userinfo: nil,
       fragment: nil,
       query: nil,
       authority: nil
     }
   } => %{
     columns: [
       %{
         name: "id",
         type: :uuid,
         __struct__: ResourceKit.Schema.Column.Literal,
         primary_key: true,
         auto_generate: true
       },
       %{
         name: "movie_id",
         type: :uuid,
         __struct__: ResourceKit.Schema.Column.Literal,
         primary_key: false,
         auto_generate: false
       },
       %{
         name: "content",
         type: :text,
         __struct__: ResourceKit.Schema.Column.Literal,
         primary_key: false,
         auto_generate: false
       },
       %{
         name: "attachments",
         type: :has_many,
         __struct__: ResourceKit.Schema.Column.Has,
         foreign_key: "comment_id",
         association_schema: %{
           uri: %{
             port: nil,
             scheme: nil,
             path: "/schemas/attachments.json",
             host: nil,
             __struct__: URI,
             userinfo: nil,
             fragment: nil,
             query: nil,
             authority: nil
           },
           __struct__: ResourceKit.Schema.Ref,
           "$ref": %{
             port: nil,
             scheme: nil,
             path: "/schemas/attachments.json",
             host: nil,
             __struct__: URI,
             userinfo: nil,
             fragment: nil,
             query: nil,
             authority: nil
           }
         }
       }
     ],
     source: "comments",
     __struct__: ResourceKit.Schema.Schema
   },
   %{
     uri: %{
       port: nil,
       scheme: nil,
       path: "/schemas/posters.json",
       host: nil,
       __struct__: URI,
       userinfo: nil,
       fragment: nil,
       query: nil,
       authority: nil
     },
     __struct__: ResourceKit.Schema.Ref,
     "$ref": %{
       port: nil,
       scheme: nil,
       path: "/schemas/posters.json",
       host: nil,
       __struct__: URI,
       userinfo: nil,
       fragment: nil,
       query: nil,
       authority: nil
     }
   } => %{
     columns: [
       %{
         name: "id",
         type: :uuid,
         __struct__: ResourceKit.Schema.Column.Literal,
         primary_key: true,
         auto_generate: true
       },
       %{
         name: "movie_id",
         type: :uuid,
         __struct__: ResourceKit.Schema.Column.Literal,
         primary_key: false,
         auto_generate: false
       },
       %{
         name: "url",
         type: :text,
         __struct__: ResourceKit.Schema.Column.Literal,
         primary_key: false,
         auto_generate: false
       }
     ],
     source: "posters",
     __struct__: ResourceKit.Schema.Schema
   }
 }}